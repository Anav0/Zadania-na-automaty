
======== 1. loop ========

P: [[5, 6], [0, 1, 2, 3, 4, 7]]
L: ['560', '561']
States: [4, 5, 6] are entering 56 via symbol: 0

Looking for subset 'B' of P to break apart

1. B: [5, 6] cannot be broken by [4, 5, 6]

2. B: [0, 1, 2, 3, 4, 7] broken by: [4, 5, 6] to: [[0, 1, 2, 3, 7], [4]]
P after breaking up: [[5, 6], [0, 1, 2, 3, 7], [4]]
L before filling: ['561']
Added 40 to L
Added 41 to L
L after filling: ['561', '40', '41']

======== 2. loop ========

P: [[5, 6], [0, 1, 2, 3, 7], [4]]
L: ['561', '40', '41']
States: [2, 3, 5, 6, 4] are entering 56 via symbol: 1

Looking for subset 'B' of P to break apart

1. B: [5, 6] cannot be broken by [2, 3, 5, 6, 4]

2. B: [0, 1, 2, 3, 7] broken by: [2, 3, 5, 6, 4] to: [[0, 1, 7], [2, 3]]
P after breaking up: [[5, 6], [4], [0, 1, 7], [2, 3]]
L before filling: ['40', '41']
Added 230 to L
Added 231 to L
L after filling: ['40', '41', '230', '231']

3. B: [4] cannot be broken by [2, 3, 5, 6, 4]

======== 3. loop ========

P: [[5, 6], [4], [0, 1, 7], [2, 3]]
L: ['40', '41', '230', '231']
States: [2, 3] are entering 4 via symbol: 0

Looking for subset 'B' of P to break apart

1. B: [5, 6] cannot be broken by [2, 3]

2. B: [4] cannot be broken by [2, 3]

3. B: [0, 1, 7] cannot be broken by [2, 3]

4. B: [2, 3] cannot be broken by [2, 3]

======== 4. loop ========

P: [[5, 6], [4], [0, 1, 7], [2, 3]]
L: ['41', '230', '231']
Nothing enters 4 via symbol: 1

======== 5. loop ========

P: [[5, 6], [4], [0, 1, 7], [2, 3]]
L: ['230', '231']
States: [7] are entering 23 via symbol: 0

Looking for subset 'B' of P to break apart

1. B: [5, 6] cannot be broken by [7]

2. B: [4] cannot be broken by [7]

3. B: [0, 1, 7] broken by: [7] to: [[0, 1], [7]]
P after breaking up: [[5, 6], [4], [2, 3], [0, 1], [7]]
L before filling: ['231']
Added 70 to L
Added 71 to L
L after filling: ['231', '70', '71']

4. B: [2, 3] cannot be broken by [7]

======== 6. loop ========

P: [[5, 6], [4], [2, 3], [0, 1], [7]]
L: ['231', '70', '71']
States: [7] are entering 23 via symbol: 1

Looking for subset 'B' of P to break apart

1. B: [5, 6] cannot be broken by [7]

2. B: [4] cannot be broken by [7]

3. B: [2, 3] cannot be broken by [7]

4. B: [0, 1] cannot be broken by [7]

5. B: [7] cannot be broken by [7]

======== 7. loop ========

P: [[5, 6], [4], [2, 3], [0, 1], [7]]
L: ['70', '71']
States: [0, 1] are entering 7 via symbol: 0

Looking for subset 'B' of P to break apart

1. B: [5, 6] cannot be broken by [0, 1]

2. B: [4] cannot be broken by [0, 1]

3. B: [2, 3] cannot be broken by [0, 1]

4. B: [0, 1] cannot be broken by [0, 1]

5. B: [7] cannot be broken by [0, 1]

======== 8. loop ========

P: [[5, 6], [4], [2, 3], [0, 1], [7]]
L: ['71']
Nothing enters 7 via symbol: 1


Final P: [[5, 6], [4], [2, 3], [0, 1], [7]]

Minimized automata transition table:

	0	1	
56'	56	56
4	56	56
23	4	56
01_	7	01
7	23	23

